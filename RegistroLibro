#*******DIEGO*******
#SISTEMA DE BIBLIOTECA
#*******JULIO*******
lbl1 = Label(frame2,text="CODIGO:")
lbl1.place(x=5,y=5)    
self.txtCodigo=Entry(frame2)
self.txtCodigo.place(x=5,y=25,width=190, height=20)
lbl2 = Label(frame2,text="TITULO: ")
lbl2.place(x=5,y=55)
self.txtTitulo=Entry(frame2)
self.txtTitulo.place(x=5,y=75,width=190, height=20)

lbl3 = Label(frame2,text="EDITORIAL: ")
lbl3.place(x=5,y=105)        
self.txtEditorial=Entry(frame2)
self.txtEditorial.place(x=5,y=125,width=190, height=20)

lbl4 = Label(frame2,text="AUTOR 1: ")
lbl4.place(x=5,y=155)
self.txtCurrency=Entry(frame2)
self.txtCurrency.place(x=5,y=175,width=190, height=20)

lbl5 = Label(frame2,text="AUTOR 2: ")
lbl5.place(x=5,y=205)
self.txtCurrency=Entry(frame2)
self.txtCurrency.place(x=5,y=225,width=190, height=20)

#****Marlen****
# VENTANA VERIFICACION CORRECTO
# Verificacion Login - Opcion Acceso Correcto
def exito_login():
    global ventana_exito
    ventana_exito = Toplevel(ventana_login)
    ventana_exito.title("CORRECTO")
    ventana_exito.geometry("250x200")
    Label(ventana_exito, text="ACCESO CORRECTO", font=("Calibri", 12)).pack()
    Button(ventana_exito, text="FINALIZAR", command=borrar_exito_login).pack()
 
# VENTANA VERIFICACION INCORRECTO
# Verificacion Login - Opcion Acceso Incorrecto
def no_clave():
    global ventana_no_clave
    ventana_no_clave = Toplevel(ventana_login)
    ventana_no_clave.title("ERROR")
    ventana_no_clave.geometry("150x100")
    Label(ventana_no_clave, text="CONTRASEÃ‘A INCORRECTA ").pack()
    Button(ventana_no_clave, text="OK", command=borrar_no_clave).pack()
 
# VENTANA USUARIO NO ENCONTRADO
# Verificacion Usuario - Opcion No encontrado
def no_usuario():
    global ventana_no_usuario
    ventana_no_usuario = Toplevel(ventana_login)
    ventana_no_usuario.title("ERROR")
    ventana_no_usuario.geometry("150x100")
    Label(ventana_no_usuario, text="USUARIO NO ENCONTRADO").pack()
    Button(ventana_no_usuario, text="OK", command=borrar_no_usuario).pack()
#*******JUAN LUIS*******

import re
import tkinter as tk
from tkinter import IntVar, StringVar, messagebox,Label
from tkinter import ttk

class FormularioRegistroLibro(tk.Tk):

    def __init__(self):
        super().__init__()

        self.inicializar_gui()
        self.definir_patrones_validaciones()


    def inicializar_gui(self):
        self.title('S. I. B. "CORAZON DE JESUS"')
        self.minsize(400,350)  

        

        lbl_titulo=tk.Label(self, text='FORMULARIO REGISTRO LIBRO')
        lbl_titulo.grid(row=0,column=1,pady=10)

        frm_principal=tk.Frame(self, bd=8,relief='groove')
        frm_principal.grid(row=1,column=1,padx=10,pady=10)

        lbl_codigo=tk.Label(frm_principal,text='CODIGO',justify=tk.LEFT )
        lbl_codigo.grid(row=0,column=0,sticky=tk.W)
        self.txt_codigo=tk.Entry(frm_principal,width=20)
        self.txt_codigo.grid(row=0,column=1)

        lbl_titulo=tk.Label(frm_principal,text='TITULO')
        lbl_titulo.grid(row=1,column=0,sticky=tk.W)
        self.txt_titulo=tk.Entry(frm_principal,width=20)
        self.txt_titulo.grid(row=1,column=1)

        lbl_editorial=tk.Label(frm_principal,text='EDITORIAL')
        lbl_editorial.grid(row=2,column=0,sticky=tk.W)
        self.txt_editorial=tk.Entry(frm_principal,width=20)
        self.txt_editorial.grid(row=2,column=1)
    
        lbl_a1=tk.Label(frm_principal,text='AUTOR 1')
        lbl_a1.grid(row=3,column=0,sticky=tk.W)
        self.txt_a1=tk.Entry(frm_principal,width=20)
        self.txt_a1.grid(row=3,column=1)

        lbl_a2=tk.Label(frm_principal,text='AUTOR 2')
        lbl_a2.grid(row=4,column=0,sticky=tk.W)
        self.txt_a2=tk.Entry(frm_principal,width=20)
        self.txt_a2.grid(row=4,column=1)

        lbl_tomo=tk.Label(frm_principal,text='TOMO')
        lbl_tomo.grid(row=5,column=0,sticky=tk.W)
        self.cbx_tomo=ttk.Combobox(frm_principal,width=20)
        paises=('Tomo I','Tomo II','Tomo III')
        self.cbx_tomo['values']=paises
        self.cbx_tomo.current(0)
        self.cbx_tomo.grid(row=5,column=1)

        lbl_edicion=tk.Label(frm_principal,text='EDICION')
        lbl_edicion.grid(row=6,column=0,sticky=tk.W)
        self.txt_edicion=tk.Entry(frm_principal,width=20)
        self.txt_edicion.grid(row=6,column=1)

        lbl_estado=tk.Label(frm_principal,text='ESTADO')
        lbl_estado.grid(row=7,column=0,sticky=tk.W)
        self.cbx_estado=ttk.Combobox(frm_principal,width=20)
        paises=('Malo','Regular','Bueno')
        self.cbx_estado['values']=paises
        self.cbx_estado.current(0)
        self.cbx_estado.grid(row=7,column=1)

        btn_guardar=tk.Button(frm_principal,text='guardar',command=self.guardar)
        btn_guardar.grid(row=8,column=2)

        btn_limpiar=tk.Button(frm_principal,text='Limpiar',command=self.Limpiar)
        btn_limpiar.grid(row=8,column=3)

        btn_salir=tk.Button(frm_principal,text='salir',command=self.salir)
        btn_salir.grid(row=8,column=4)

    def definir_patrones_validaciones(self):
        patron_codigo=r'^[^A-Za-z]*$'
        self.regex_codigo=re.compile(patron_codigo)

        patron_titulo=r'^[^0-9]*$'
        self.regex_titulo=re.compile(patron_titulo)

        patron_editorial=r'^[^0-9]*$'
        self.regex_editorial=re.compile(patron_editorial)

        patron_a1=r'^[^0-9]*$'
        self.regex_a1=re.compile(patron_a1)

        patron_a2=r'^[^0-9]*$'
        self.regex_a2=re.compile(patron_a2)

        patron_edicion=r'^[^0-9]*$'
        self.regex_edicion=re.compile(patron_edicion)



    def guardar(self):

        codigo=self.txt_codigo.get()
        if re.match(self.regex_codigo,codigo) is None:
            messagebox.showwarning('Mensaje','solo se acepta numeros')
            return

        titulo=self.txt_titulo.get()
        if re.match(self.regex_titulo,titulo) is None:
            messagebox.showwarning('Mensaje','solo letras en el campo Titulo')
            return

        editorial=self.txt_editorial.get()
        if re.match(self.regex_editorial,editorial) is None:
            messagebox.showwarning('Mensaje','solo letras en el campo editorial')
            return

        a1=self.txt_a1.get()
        if re.match(self.regex_a1,a1) is None:
            messagebox.showwarning('Mensaje','solo letras en el campo a1')
            return

        a2=self.txt_a2.get()
        if re.match(self.regex_a2,a2) is None:
            messagebox.showwarning('Mensaje','solo letras en el campo a2')
            return

        tomo=self.cbx_tomo.get()

        edicion=self.txt_edicion.get()
        if re.match(self.regex_edicion,edicion) is None:
            messagebox.showwarning('Mensaje','solo letras en el campo edicion')
            return

        estado=self.cbx_estado.get()
      
        print(codigo,"\t",titulo,"\t",editorial,"\t",a1,"\t",a2,"\t",tomo,"\t",edicion,"\t",estado)


    def Limpiar(self):
        self.txt_codigo.delete(0,'end')
        self.txt_titulo.delete(0,'end')
        self.txt_editorial.delete(0,'end')
        self.txt_a1.delete(0,'end')
        self.txt_a2.delete(0,'end')
        self.cbx_tomo.delete(0,'end')
        self.txt_edicion.delete(0,'end')
        self.cbx_estado.delete(0,'end')

    def salir(self):
        self.destroy()


def main():
    app = FormularioRegistroLibro()
    app.mainloop()
    
if __name__ == '__main__':
    main()
